events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Assuming backend listens on port 3001 inside Docker
        server backend:3001;  # Backend container should expose port 3001
    }

    server {
        listen 80;  # Nginx will listen on port 80 for HTTP requests

        # Serve static files for the Next.js app (static and _next directories)
        location /_next/ {
            root /usr/share/nginx/html;  # Assuming frontend static files are copied to /usr/share/nginx/html
            try_files $uri $uri/ /index.html;
        }

        location /static/ {
            root /usr/share/nginx/html;  # Serve static files from the Next.js build directory
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the backend
        location /api/ {
            proxy_pass http://backend;  # Forward API calls to the backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle root and other frontend pages
        location / {
            root /usr/share/nginx/html;  # Serve the static files from the Next.js build directory
            try_files $uri $uri/ /index.html;  # If no match, fallback to index.html (for client-side routing)
        }

        # Handle CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            return 204;
        }

        # General CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
    }
}
