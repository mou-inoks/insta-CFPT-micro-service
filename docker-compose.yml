version: "3.8"

services:

  backend:
    build:
      context: ./backend   # Le chemin vers le répertoire du backend
      dockerfile: Dockerfile # Nom du Dockerfile du backend
    container_name: backend
    ports:
      - "3001:3001"  # Le backend écoute sur le port 3001
    networks:
      - app-network
    depends_on:
      - mariadb
    environment:
      NODE_ENV: production  # Assurez-vous que votre backend fonctionne en mode production

  frontend:
    build:
      context: ./frontend  # Le répertoire du frontend
      dockerfile: Dockerfile # Dockerfile spécifique pour le frontend
    container_name: frontend
    ports:
      - "8082:3000"  # Next.js écoute sur le port 3000 dans le conteneur
    networks:
      - app-network
    depends_on:
      - backend  # Le frontend dépend du backend

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: "no"
    ports:
      - "3307:3306"
    volumes:
      - ./datadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: super
      MYSQL_DATABASE: instacfpt2
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: "no"
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: super
    depends_on:
      - mariadb
    networks:
      - app-network

  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "80:80"  # Reverse proxy accessible sur le port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Configuration Nginx personnalisée
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

networks:
  app-network:
    driver: bridge
