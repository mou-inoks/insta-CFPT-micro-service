services:

  backend:
    build:
      context: ./backend   
      dockerfile: Dockerfile 
    container_name: backend
    ports:
      - "3001:3001"  
    networks:
      - app-network
    depends_on:
      - mariadb
      - mailhog
    environment:
      NODE_ENV: production 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.insta.cfpt.info`)"
      - "traefik.http.routers.backend.entrypoints=web"


  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile 
    container_name: frontend
    ports:
      - "8082:3000"  
    networks:
      - app-network
    depends_on:
      - backend  
    volumes:
    - ./frontend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`insta.cfpt.info`)"
      - "traefik.http.routers.frontend.entrypoints=web"


  mariadb:
    image: mariadb
    container_name: mariadb
    restart: "no"
    ports:
      - "3307:3306"
    volumes:
      - ./datadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: super
      MYSQL_DATABASE: instacfpt2
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: "no"
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: super
    depends_on:
      - mariadb
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app-network
    
    
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network


  reverse-proxy:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network
    depends_on:
      - frontend
      - backend


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
  
  # admin admin <- user password
  mariadb-exporter:
    image: quay.io/prometheus/mysqld-exporter
    container_name: mariadb-exporter
    restart: unless-stopped
    command:
    - "--mysqld.username=root:super"
    - "--mysqld.address=mariadb:3306"                    
    ports:
      - "9104:9104" 
    networks:
      - app-network
    depends_on:
      - mariadb

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - app-network
    depends_on:
      - backend
    # ID Dashboard 1860

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3002:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
    networks:
      - app-network
    depends_on:
      - prometheus
  # dashboard id = 14057

networks:
  app-network:
    driver: bridge
